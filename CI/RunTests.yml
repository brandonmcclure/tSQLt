# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- CITesting

pool:
  vmImage: 'vs2017-win2016'

steps:

- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    KeyVaultName: 'tSQLtCI1078'
    SecretsFilter: '*'



- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Invoke-Sqlcmd -ServerInstance "$env:SQLFQDN" -Username tSQLt -Password "$env:password" -Query "SELECT @@VERSION;"'
  env:
    password: $(tSQLt---LoginForCIVMs---)
    SQLFQDN: $(SQL2008SP3-FQDN)


- task: SqlDacpacDeploymentOnMachineGroup@0
  condition: always()
  inputs:
    TaskType: 'sqlInline'
    InlineSql: 'SELECT @@VERSION'
    ServerName: 'SQL2008SP3'
    DatabaseName: 'tempdb'
    AuthScheme: 'windowsAuthentication'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '276a22c3-dbc9-4c7c-8e4e-18c70ef165d8'
    definition: '1'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    artifactName: 'tSQLtPreTests'
    itemPattern: '*.*'
    targetPath: '$(Pipeline.Workspace)'

- script: |
    dir /S $(Pipeline.Workspace)
  displayName: 'Complete Directory Listing (Run always)'
  condition: always()
